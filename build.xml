<?xml version="1.0" encoding="UTF-8" ?>

<project name="Scala Lazy Abstraction" default="dist" basedir=".">
    <description>
        The Scala Lazy Abstraction Framework
    </description>

    <!-- The settings can be overridden in local.properties. -->
    <property environment="env" />
    <property name="scala.home" value="${env.SCALA_HOME}" />
    <property name="java.home" value="${env.JAVA_HOME}" />
    <property name="scala-library.jar" value="${scala.home}/lib/scala-library.jar" />
    <property name="scala-compiler.jar" value="${scala.home}/lib/scala-compiler.jar" />
    <property name="scala-reflect.jar" value="${scala.home}/lib/scala-reflect.jar"/>
    <property name="scala-actors.jar" value="${scala.home}/lib/scala-actors.jar"/>
    <property name="scala-compiler.jar" value="${scala.home}/lib/scala-compiler.jar" />
    <property name="scalac.default.params" value="-deprecation -unchecked" />

    <!-- paths -->
    <property name="base.dir" value="${basedir}" />
    <property name="sources.dir" value="${base.dir}/src" />
    <property name="dist.dir" value="${base.dir}/dist" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="flata.dir" value="${basedir}/flata" />
    <property name="build.dir" value="${base.dir}/bin" />
	
	<!-- BIP libraries -->
	<path id="bip.jars">
		<fileset dir="${base.dir}/bip-lib">
	        <include name="*.jar"/>
	    </fileset>
	</path>
	
    <!-- libraries -->
    <property name="java-cup.jar" value="${lib.dir}/java-cup-11a.jar" />
    <property name="java-cup-runtime.jar" value="${lib.dir}/java-cup-11a-runtime.jar" />
    <property name="jflex.jar" value="${lib.dir}/JFlex.jar" />
    <property name="z3.jar" value="${lib.dir}/z3.jar" />
    <property name="princess.jar" value="${lib.dir}/princess.jar" />
    <property name="smt-parser.jar" value="${lib.dir}/smt-parser.jar" />
    <property name="pri-parser.jar" value="${lib.dir}/pri-parser.jar" />
    <property name="flata.jar" value="${flata.dir}/flata.jar" />
    <property name="acceleration.jar" value="${flata.dir}/acceleration.jar" />
    <property name="antlr.jar" value="${lib.dir}/antlr-3.3-complete.jar" />
	<property name="nts.jar" value="${flata.dir}/nts.jar" />
	<property name="proguard.jar" value="${lib.dir}/nts.jar" />

    <!-- other properties -->
    <property name="dist.jar" value="${dist.dir}/lazabs.jar" />
    <property name="immed.jar" value="${dist.dir}/immed.jar" />	
    <property name="main.class" value="lazabs.Main" />

    <!-- required to use the tasks scalac, fsc and scaladoc -->
    <taskdef resource="scala/tools/ant/antlib.xml">
        <classpath>
            <pathelement location="${scala-compiler.jar}"  />
            <pathelement location="${scala-library.jar}"  />
            <pathelement location="${scala-reflect.jar}" />
        </classpath>
    </taskdef>
	
	<!-- required to use the task jflex -->
    <taskdef name="jflex" classname="JFlex.anttask.JFlexTask">
        <classpath>
            <pathelement location="${jflex.jar}" />
        </classpath>
    </taskdef>

	<!-- required to use the task java cup -->	
    <taskdef name="cup" classname="java_cup.anttask.CUPTask">
        <classpath>
            <pathelement location="${java-cup.jar}" />
        </classpath>
    </taskdef>
	

	<target name="cupparser" description="compiles the Cup parser" depends="pre-parse">
        <mkdir dir="${build.dir}"  />
    	<jflex file="${sources.dir}/lazabs/parser/Lexer.jflex" />
    	<cup srcfile="${sources.dir}/lazabs/parser/Parser.cup" destdir="${sources.dir}" parser="Parser" symbols="Symbols" />
<!--        <javac srcdir="${sources.dir}" target="1.5" destdir="${build.dir}">-->
		<javac srcdir="${sources.dir}" destdir="${build.dir}">
            <include name="lazabs/parser/*.java" />
        	<classpath>
            	<pathelement location="${scala-library.jar}" />        		
                <pathelement location="${java-cup.jar}" />
                <pathelement location="${java-cup-runtime.jar}" />
                <pathelement location="${jflex.jar}" />
                <pathelement location="${build.dir}/lazabs/ast" />
        	</classpath>
        </javac>
    </target>
	
    <target name="hornparser" description="compiles the Cup parser for Horn clauses" depends="pre-parse">
        <mkdir dir="${build.dir}"  />
    	<jflex file="${sources.dir}/lazabs/horn/parser/HornLexer.jflex" />
    	<cup srcfile="${sources.dir}/lazabs/horn/parser/HornParser.cup" destdir="${sources.dir}" parser="Parser" symbols="Symbols" />
<!--        <javac srcdir="${sources.dir}" target="1.5" destdir="${build.dir}">-->
        <javac srcdir="${sources.dir}" destdir="${build.dir}">
            <include name="lazabs/horn/parser/*.java" />
        	<classpath>
            	<pathelement location="${scala-library.jar}" />        		
                <pathelement location="${java-cup.jar}" />
                <pathelement location="${java-cup-runtime.jar}" />
                <pathelement location="${jflex.jar}" />
                <pathelement location="${build.dir}/lazabs/ast" />
        	</classpath>
        </javac>
    </target>
	
    <target name="pre-parse" description="compiles the required sources to be able to compile the Cup parser">
        <mkdir dir="${build.dir}" />
        <scalac srcdir="${sources.dir}" destdir="${build.dir}">
            <include name="lazabs/ast/*" />
            <include name="lazabs/types/*" />
        	<include name="lazabs/horn/global/Horn.scala" />       	
        	<classpath>        		
            	<pathelement location="${scala-library.jar}" />
            </classpath>
        </scalac>
    </target>

	
    <target name="compile" description="compiles the files" depends="cupparser, hornparser">
        <mkdir dir="${build.dir}"  />
    	<mkdir dir="${dist.dir}"   />
        <scalac srcdir="${sources.dir}" destdir="${build.dir}" force="changed" addparams="${scalac.default.params}">
            <include name="**/*.scala" />
            <classpath>
            	<pathelement location="${scala-library.jar}" />
            	<pathelement location="${scala-reflect.jar}" />
            	<pathelement location="${scala-actors.jar}" />
                <pathelement location="${java-cup-runtime.jar}" />
               	<pathelement location="${jflex.jar}" />
                <pathelement location="${z3.jar}" />
            	<pathelement location="${princess.jar}" />
            	<pathelement location="${smt-parser.jar}" />
            	<pathelement location="${pri-parser.jar}" />
            	<pathelement location="${flata.jar}" />
            	<pathelement location="${acceleration.jar}" />
        	    <pathelement location="${antlr.jar}" />
        	    <pathelement location="${nts.jar}" />
                <pathelement location="${build.dir}" />
            </classpath>
    	    <classpath refid="bip.jars" />
        </scalac>
    </target>

    <target name="dist" depends="compile" description="build the plugin jar file and a script to use it">
        <manifest file="${dist.dir}/MANIFEST.MF">
            <attribute name="Built-By" value="lara.epfl.ch" />
            <attribute name="Main-Class" value="${main.class}" />
        	<attribute name="Class-Path" value="${scala-library.jar}"/>
        </manifest>
        <jar destfile="${dist.jar}" manifest="${dist.dir}/MANIFEST.MF">
        	<fileset dir="${build.dir}" includes="**/*.class" />
        </jar>
    </target>
	
	<target name="optim" depends="compile" description="build an optimized jar file">
        <manifest file="${dist.dir}/MANIFEST.MF">
            <attribute name="Built-By" value="lara.epfl.ch" />
            <attribute name="Main-Class" value="${main.class}" />
        	<attribute name="Class-Path" value="${scala-library.jar}"/>
        </manifest>
        <jar destfile="${immed.jar}" manifest="${dist.dir}/MANIFEST.MF">
        	<fileset dir="${build.dir}" includes="**/*.class" />
        </jar>
    	<taskdef resource="proguard/ant/task.properties"
    	         classpath="lib/proguard.jar" />
    	<proguard>
          -libraryjars ${java.home}/lib/rt.jar
    	  -libraryjars ${scala-library.jar}
          -libraryjars ${nts.jar}
          -libraryjars ${flata.jar}
          -libraryjars ${princess.jar}
          -libraryjars ${smt-parser.jar}
          -libraryjars ${pri-parser.jar}
          -libraryjars ${antlr.jar}
          -libraryjars ${java-cup-runtime.jar}
          -libraryjars ${z3.jar}
          -libraryjars ${acceleration.jar}
    	  -injars      ${immed.jar}
    	  -outjars     ${dist.jar}
    	  -keepclasseswithmembers public class * {
    	      public static void main(java.lang.String[]);
    	  }
    	</proguard>
    	<delete file="${immed.jar}" quiet="yes" failonerror="no" />
	</target>
	
	<target name="standalone" depends="compile" description="build a stand-alone jar file">
        <manifest file="${dist.dir}/MANIFEST.MF">
            <attribute name="Built-By" value="lara.epfl.ch" />
            <attribute name="Main-Class" value="${main.class}" />
        </manifest>
		<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask">
			<classpath>
		    	<pathelement location="${lib.dir}/jarjar-1.3.jar" />
		    </classpath>
		</taskdef>
		<jarjar destfile="${dist.jar}" manifest="${dist.dir}/MANIFEST.MF">
			<fileset dir="${build.dir}" includes="**/*.class" />
			<zipfileset src="${scala-library.jar}" />
			<zipfileset src="${scala-reflect.jar}" />
			<zipfileset src="${scala-actors.jar}" />
			<zipfileset src="${nts.jar}" />
			<zipfileset src="${flata.jar}" />
			<zipfileset src="${princess.jar}" />
			<zipfileset src="${smt-parser.jar}" />
			<zipfileset src="${pri-parser.jar}" />
			<zipfileset src="${antlr.jar}" />
			<zipfileset src="${java-cup-runtime.jar}" />
			<zipfileset src="${acceleration.jar}" />
	    </jarjar>
	</target>
	
    <target name="clean" description="cleans up" depends="clean-cupparser">
        <delete dir="${build.dir}" includeemptydirs="yes" quiet="yes" failonerror="no" />
        <delete dir="${dist.dir}" includeemptydirs="yes" quiet="yes" failonerror="no" />
        <delete>
            <fileset dir="${basedir}" includes="**/*.class" />
        </delete>
    </target>
	
    <target name="clean-cupparser" description="removes the files generated for the Cup parser">
        <delete file="${sources.dir}/lazabs/parser/Lexer.java" quiet="yes" failonerror="no" />
        <delete file="${sources.dir}/lazabs/parser/Lexer.java~" quiet="yes" failonerror="no" />
        <delete file="${sources.dir}/lazabs/parser/Parser.java" quiet="yes" failonerror="no" />
        <delete file="${sources.dir}/lazabs/parser/Symbols.java" quiet="yes" failonerror="no" />
    	<delete file="${sources.dir}/lazabs/horn/parser/HornLexer.java" quiet="yes" failonerror="no" />
    	<delete file="${sources.dir}/lazabs/horn/parser/HornLexer.java~" quiet="yes" failonerror="no" />
    	<delete file="${sources.dir}/lazabs/horn/parser/Parser.java" quiet="yes" failonerror="no" />
    	<delete file="${sources.dir}/lazabs/horn/parser/Symbols.java" quiet="yes" failonerror="no" />

    </target>	
	
    <target name="new" description="clean and rebuilds" />
</project>
