
simple-init.smt2
Warning: ignoring (set-info :status unknown)
Warning: ignoring (set-logic HORN)
Warning: ignoring (check-sat)
Theories: SimpleArray(1)
SOLVABLE
(define-fun inv1 ((A Int) (B Int) (C Int) (D Int) (E Int)) Bool (or (not (= D 0)) (or (= A 0) (= B E))))

heaps.smt2
Warning: ignoring (set-logic HORN)
Warning: ignoring (check-sat)
Warning: ignoring (get-model)
Warning: ignoring (exit)
Theories: SimpleArray(1)
SOLVABLE
(define-fun INV1 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) Bool (and (and (= C G) (= D H)) (or (not (= A E)) (= B F))))

double-heap.smt2
Warning: ignoring (set-logic HORN)
Warning: ignoring (check-sat)
Warning: ignoring (get-model)
Warning: ignoring (exit)
Theories: SimpleArray(1)
SOLVABLE
(define-fun INV1 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int)) Bool (and (and (and (= C H) (= D I)) (= E J)) (or (not (= A F)) (= B G))))

array_noloop_crash.smt2
Warning: ignoring (set-logic HORN)
Warning: ignoring (check-sat)
Warning: ignoring (get-model)
Warning: ignoring (exit)
Theories: SimpleArray(1)
SOLVABLE

bubble-quans.smt2
Warning: ignoring (set-info :status sat)
Warning: ignoring (set-logic HORN)
Warning: ignoring (check-sat)
Theories: SimpleArray(1)
SOLVABLE
(define-fun sp0 ((A Int) (B Int) (C Int) (D Int) (E Int)) Bool (>= E 0))
(define-fun sp1 ((A Int) (B Int) (C Int) (D Int) (E Int)) Bool (>= E 0))

init.cleaned.smt2
Warning: ignoring (set-info :status unknown)
Warning: ignoring (set-logic HORN)
Warning: ignoring (check-sat)
Theories: SimpleArray(1)
SOLVABLE
(define-fun inv1 ((A Int) (B Int) (C Int) (D Int) (E Int)) Bool (or (= A 0) (or (or (or (and (= A 1) (>= D 1)) (and (= B E) (>= A 1))) (and (and (<= A D) (>= A 1)) (>= D 2))) (and (>= A 1) (<= D (- 1))))))
(define-fun inv2 ((A Int) (B Int) (C Int) (D Int) (E Int)) Bool (or (= B E) (or (>= (- A D) 1) (<= C D))))
Warning: ignoring (set-logic HORN)
Warning: ignoring (check-sat)
Warning: ignoring (get-model)
Warning: ignoring (exit)
Theories: SimpleArray(1)
Loading CEGAR hints ...
SOLVABLE
(define-fun INV1 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int)) Bool (or (or (or (or (or (or (or (or (or (and (and (and (and (and (and (and (= C K) (= D L)) (= E 2)) (= F 1)) (= G 1)) (= J 1)) (= M 2)) (>= C 0)) (and (and (and (and (= C K) (= D L)) (= E 2)) (= M 2)) (and (and (>= (+ C (- D I)) 1) (>= C 0)) (>= (- D I) 1)))) (and (and (and (and (= C K) (= D L)) (= E 2)) (= M 2)) (and (>= C 0) (>= (- I D) 2)))) (and (and (and (= C K) (= E M)) (= F J)) (and (and (and (and (and (>= (+ C (- L I)) 1) (>= (- (+ E L) D) 3)) (>= (+ E (- L I)) 2)) (<= F G)) (>= F 1)) (>= (- I L) 2)))) (and (and (and (and (= C K) (= E M)) (= F 1)) (= J 1)) (and (and (and (and (and (>= (+ C (- L I)) 1) (>= C 0)) (>= (- (+ E L) D) 3)) (>= (- D I) (- 1))) (>= E 2)) (>= G 1)))) (and (and (and (= C K) (= E M)) (= G J)) (and (and (and (and (and (and (>= C 0) (>= (- (+ E L) D) 3)) (>= (- (- I L) E) (- 1))) (>= E 2)) (<= F G)) (>= F 1)) (>= (- I L) 2)))) (and (and (and (= C K) (= E M)) (= J 1)) (and (and (and (and (and (and (and (and (>= (+ C (- L I)) 1) (>= C 0)) (>= (- (+ E L) D) 3)) (>= (- D I) (- 1))) (>= (+ E (- L I)) 3)) (>= E 2)) (>= (+ F G) 2)) (>= F 1)) (>= G 1)))) (and (and (= C K) (= E M)) (and (and (and (and (and (and (>= (+ C (- L I)) 1) (>= C 0)) (>= (- (+ E L) D) 3)) (>= (- D I) (- 1))) (>= (+ E (- L I)) 3)) (>= E 2)) (>= (- L I) 1)))) (and (and (= C K) (= E M)) (and (and (and (and (and (and (and (>= (+ C (- L I)) 1) (>= (- (+ E L) D) 3)) (>= (+ E (- L I)) 3)) (>= (+ F (- G J)) 1)) (>= F J)) (>= G J)) (>= (- I L) 2)) (>= J 1)))) (and (and (= C K) (= E M)) (and (and (and (>= C 0) (>= (- (+ E L) D) 3)) (<= E (- I L))) (>= E 2)))))
