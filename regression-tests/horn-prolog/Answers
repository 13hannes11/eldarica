
merge.horn
SOLVABLE
merge(A,B,C) :- ((A + (B - C)) = 0).

gcd.horn
SOLVABLE
rf(A,B,C) :- (\+((A = B)); (A >= C)).

mult.horn
SOLVABLE
mult(A,B,C) :- ((A >= 4); (((((A = 0), (C >= 0)); ((A >= 2), (((-2 * B) + C) >= 0))); ((A >= 2), (((1 - A) mod 2) = 0))); (((A >= 1), (B =< C)), (((1 - A) mod 2) = 0)))).

Levenstein.horn
SOLVABLE
p1(A,B,C) :- ((((A >= 1), (B >= 1)), (C =< 1)), (C >= 0)).
p2(A,B,C,D) :- (((((A >= C), (A >= 1)), (B >= 1)), (C =< 1)), (C >= 0)).
p3(A,B,C,D,E) :- ((((A >= 1), (B >= 1)), (C =< 1)), (C >= 0)).
p4(A,B,C,D,E) :- ((((A >= E), (A >= 1)), (B >= 1)); (((A >= 1), (B >= E)), (B >= 1))).
rf(A,B,C) :- ((((A = C), (B = 0)); ((((A + (B - C)) >= 0), (A >= C)), (A >= 0))); ((((A + (B - C)) >= 0), (A >= 0)), (B >= C))).

disjunctive.horn
SOLVABLE
rf(A,B,C) :- ((((A + (C - B)) >= 4), (A >= 0)); ((A >= 0), (C >= 0))).

mccarthy91.nts.horn
SOLVABLE
f_s1(A,B,C,D) :- ((B >= D), (D =< 111)).
f_s3(A,B,C,D) :- ((C =< 101), (D =< 100)).
f_sf(A,B,C,D) :- ((C = 91); ((((B - C) >= 10), (B >= 102)), (C =< 101))).

mccarthy92.nts.horn
SOLVABLE
f_s1(A,B,C,D) :- ((B = D), (((((((((14 - B) mod 2) = 0), (((12 - B) mod 2) = 0)), (((2 - B) mod 2) = 0)), (((-1 * B) mod 2) = 0)), (((-12 + B) mod 2) = 0)), (((-2 + B) mod 2) = 0)), ((B mod 2) = 0))).
f_s3(A,B,C,D) :- (((C >= 92), (D =< 100)), ((((((2 - C) mod 2) = 0), (((-2 + C) mod 2) = 0)), ((C =< 99); ((((4 - C) mod 2) = 0), ((C = 102); (C = 100))))), ((C =< 99); ((((2 - C) mod 2) = 0), ((C = 102); (C = 100)))))).
f_sf(A,B,C,D) :- ((C = 92); ((((B - C) = 10), (B >= 102)), ((((((14 - B) mod 2) = 0), (((12 - B) mod 2) = 0)), (((-12 + B) mod 2) = 0)), ((B mod 2) = 0)))).

palindrome.nts.horn
SOLVABLE
palindrome_q0(A,B,C,D,E,F,G,H) :- ((B + ((G - F) - C)) >= 0).
palindrome_q2(A,B,C,D,E,F,G,H) :- ((B + ((-2 * H) - C)) >= -1).
palindrome_q4(A,B,C,D,E,F) :- ((((C + (-2 * D)) - B) >= -3); (D =< 1)).

listcounter.error.nts.horn
NOT SOLVABLE
Loading CEGAR hints ...
Initially: 7 clauses
After eliminating linear definitions: 7 clauses
Constant and interval propagation 
Unique satisfiable clauses: 8
Starting CEGAR
.......
CEGAR iterations: 0
Final number of abstract states: 4
Final number of matched abstract states: 4
Final number of abstract edges: 7
Number of generated predicates: 4
Number of implication checks: 14

SOLVABLE
a(A) :- (A >= 0).
b(A) :- (A >= 0).
c(A) :- (A >= 0).
